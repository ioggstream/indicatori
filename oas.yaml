                  
openapi: 3.0.1
info:
  version: 1.1.1
  title: bikeshed
  description: |-
    Nota sui formati:
    
     - il passaggio tra csv e json può richiedere la gestione applicativa
       dei campi nan
servers:
- url: https://localhost/covid-19/v1
  description: |-
    development server
  x-sandbox: true
paths:
  /observations/unita-amministrativa/{unita_amministrativa}/{unita_amministrativa_id}:
    get:
      parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: unita_amministrativa
        description: |-
          La feature of interest per le osservazioni.
          In questo caso sono unità amministrative, ma
          possiamo estenderle a diversi modelli.

          Per scelta non utilizziamo un'alberatura gerarchica
          tra unità amministrative.

          Q: Come recupero i dati di tutte le province
             di una regione?
        schema:
          type: string
          enum:
          - regioni
          - comuni
          - province
          example: regioni
        in: path
        required: true
      - name: unita_amministrativa_id
        description: |-
          l'identificativo della feature: per le unità amministrative
          sono i codici Istat. Nell'esempio indichiamo l'Umbria.
        schema:
          type: string
        examples:
          Umbria:
            summary: Umbria
            value: 10
        in: path
        required: true
      - name: embed
        schema:
          type: string
        in: query
      - name: date_start
        in: query
        schema:
          type: string
          format: date-time
      - name: date_end
        in: query
        schema:
          type: string
          format: date-time
      - name: parameter_ids
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ObservationParameterId'
      description: |-
        Ritorna le osservazioni associate ad un'unità amministrativa.
      responses:
       '200':
         description: |-
           elenca le osservazioni con i parametri
         content:
            application/json:
              schema:
                $ref: '#/components/schemas/Osservazioni'
              examples:
                Regione:
                  $ref: '#/components/examples/OsservazioniRegione'
            text/csv:
              examples:
                ComuneCSV:
                  $ref: '#/components/examples/OsservazioniComuneCSV'
                RegioneCSV:
                  $ref: '#/components/examples/OsservazioniRegioneCSV'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GeoJsonData'
              examples:
                RegioneGeo:
                  $ref: '#/components/examples/OsservazioniRegioneGeo'
  /observation-parameters/{parameter_id}:
    get:
      description: |-
        Recupera le informazioni su un parameter indicando
        l'esatta semantica.
      parameters:
      - $ref: '#/components/parameters/AcceptLanguage'
      - name: parameter_id
        schema:
          $ref: '#/components/schemas/ObservationParameterId'
        in: path
        required: true
      responses:
        "200":
           description: Un parametro
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/ObservationParameter'


components:

  examples:
    UnitaAmministrativa:
      summary: Una unità amministrativa
      value:
        codice_stato: ITA
        nome_stato: Italia
        codice_regione: '17'
        denominazione_regione: Basilicata
        codice_provincia: '076'
        denominazione_provincia: Potenza
        sigla_provincia: PZ
        denominazione_comune: Potenza
        codice_comune: '076063'
    GeoJsonData: &GeoJsonData
      $ref: https://ioggstream.github.io/api-confini-amministrativi/2020-01-01/generalizzata/comune/002082.geojson
    GeoJsonObservation:
      summary: embedded geojson
      value:
        type: Feature
        geometry: {}
        properties:
          $ref: '#/components/examples/OsservazioniRegione/value'
    OsservazioniComuneAllCSV:
      summary: CSV Comune short
      value: |-
        phenomenon_time,generation_time,ricoverati_con_sintomi,terapia_intensiva,totale_ospedalizzati,isolamento_domiciliare,totale_positivi,variazione_totale_positivi,nuovi_positivi,dimessi_guariti,deceduti,totale_casi,tamponi,casi_testati
        "2020-05-26","2020-05-20","076063",231,9,240,1369,1609,-62,4,1132,366,3107,48903,34428
    regione_completo:
      summary: Osservazioni complete di una regione
      value: {}
    ObservationShort:
      summary: a single, short observation
      value: &ObservationShort
        phenomenon_time: 2020-05-26
        parameter_id: positive-cases-with-date
        feature_of_interest_id: patient
        value: 10
        value_measurement_unit: people
    ObservationEmbed:
      summary: an Observation with _embed fields
      value:
        <<: *ObservationShort
        _embedded:
          parameter:
              '@id': https://w3id.org/italia/data/observation-parameter/positive-cases-with-date
              name: casi sintomatici con data inizio sintomi
          feature_of_interest:
            name: Paziente
            '@id': https://w3id.org/italia/data/feature-of-interest/patient
    OsservazioneCompletaA1:
      summary: Una osservazione con tutti i dettagli possibile
      value:
        $ref: '#/components/examples/ObservationEmbed/value'
    OsservazioniRegioneCSV:
      summary: Osservazioni su un singolo parametro
      value: |-
        phenomenon_time,positive-cases-with-date,in-intensive-care,codice_regione,denominazione_regione
        2020-05-20, 10, 4,10,Umbria
        2020-05-21, 11, 3,10,Umbria
        2020-05-22, 8, 5,10,Umbria
    OsservazioniComuneCSV:
      summary: Osservazioni su un singolo parametro
      value: |-
        phenomenon_time,positive-cases-with-date,in-intensive-care,\
          codice_regione,denominazione_regione,\
          codice_provincia,denominazione_provincia,\
          codice_comune,denominazione_comune
        2020-05-20, 10, 4,10,Umbria,054,Perugia,054039,Perugia
        2020-05-21, 11, 3,10,Umbria,054,Perugia,054039,Perugia
        2020-05-22, 8, 5,10,Umbria,054,Perugia,054039,Perugia

    OsservazioniRegione:
        summary: Osservazioni su una singola unità amministrativa.
        value: &OsservazioniRegione
          unita_amministrativa:
            $ref: '#/components/examples/UnitaAmministrativa/value'
          osservazioni:
          - value: 4
            parameter_id: in-intensive-care
            phenomenon_time: "2020-05-20"
          - value: 3
            parameter_id: in-intensive-care
            phenomenon_time: "2020-05-21"
            modified: "2020-05-21"
          - value: 5
            parameter_id: in-intensive-care
            phenomenon_time: "2020-05-20"
          - value: 11
            parameter_id: positive-cases-with-date
            phenomenon_time: "2020-05-21"
            modified: "2020-05-21"
          - value: 8
            parameter: positive-cases-with-date
            generation_time: "2020-05-22"
            phenomenon_time: "2020-05-22"
            modified: "2020-05-22"
          - $ref: '#/components/examples/OsservazioneCompletaA1/value'
    OsservazioniRegioneGeo:
      summary: geojson embedded
      value:
        type: Feature
        geometry: {}
        properties:
          <<: *OsservazioniRegione

  parameters:
    AcceptLanguage:
      description: |-
        Language selection is based on content-negotiation.
        The adopted schema shows the subset of all the values
        that are allowed.
      in: header
      schema:
        $ref: '#/components/schemas/Language'
      name: Accept-Language
      example: "it"
  responses:
    Osservazioni:
      description: I dati vengono ritornati correttamente.
      content:
        application/csv:
          schema:
            type: object
          examples:
            OsservazioniComuneCSV:
              $ref: '#/components/examples/OsservazioniComuneCSV'
        application/json:
          schema:
            $ref: '#/components/schemas/Osservazioni'
          examples:
            regione_compleo:
              $ref: '#/components/examples/regione_completo'
        application/geo+json:
          schema:
            $ref: '#/components/schemas/GeoJsonData'
          examples:
            geojson:
              $ref: '#/components/examples/GeoJsonObservation'

  schemas:
    GeoJsonFeature:
      $ref: 'https://geojson.org/schema/Feature.json'
    GeoJsonData:
      allOf:
        - $ref: '#/components/schemas/GeoJsonFeature'
        - properties:
            properties:
              $ref: '#/components/schemas/Osservazioni'
      example:
        $ref: '#/components/examples/GeoJsonObservation'

    Osservazioni:
      type: object
      description: |-
        Un oggetto contenente una serie di osservazioni.
      properties:
        location:
          $ref: '#/components/schemas/UnitaAmministrativa'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Observation'

    ObservationParameterId:
          type: string
          description: a short string representing the parameter in a given namespace
          enum: [positive-cases-with-date, hospitalized-with-symptoms,in-intensive-care,totale_ospedalizzati,
                 isolamento_domiciliare,totale_positivi,variazione_totale_positivi,nuovi_positivi,dimessi_guariti,
                 deceduti,totale_casi,tamponi,casi_testati]
    ObservationParameter:
      x-onto: https://w3id.org/italia/onto/IoT/ObservationParameter
      description: |-
        Rappresenta un parametro (proprietà) dell'osservazione
        di una caratteristica di interesse. Per esempio, se diciamo che
        la temperatura della cucina è di 28 gradi celsius, la temperatura rappresenta l'attributo osservato.
      properties:
        "@id":
          type: string
          format: url
        id:
          $ref: '#/components/schemas/ObservationParameterId'
        name:
          type: string
          description: |-
            a long description of a parameter
        description:
          type: string
          description: |-
            a very long and detailed description for a parameter.
      example:
        "@id": https://w3id.org/italia/data/observation-parameter/positive-cases-with-date
        id: positive-cases-with-date
        name: >-
          casi sintomatici con data inizio sintomi
    Language:
      default: it
      description: >-
        Allowed language codes.
      enum:
      - it
      - en
      type: string
    Observation:
      type: object
      additionalProperties: true
      description: |-
        Una osservazione: quali campi sono interdipendenti?
      required:
      - parameter_id
      - value
      - phenomenon_time
      properties:
        uuid:
          type: string
          format: url
        phenomenon_time:
          type: string
          format: date-time
          example: 2020-05-26
        modified:
          type: string
          format: date-time
          example: 2020-05-26
        generation_time:
          type: string
          format: date-time
          example: 2020-05-26
        feature_of_interest_id:
          type: string
          description: |-
            The observed feature.
          format: url
        parameter_id:
          type: string
          format: url
        value:
          type: number
          example: 10
        value_measurement_unit:
              $ref: '#/components/schemas/MeasurementUnit'
      example:
        id: https://w3id.org/italia/data/observation/A1
        phenomenon_time: 2020-05-26
        parameter_id: positive-cases-with-date
        feature_of_interest_id: patient
        value: 10
        value_measurement_unit: unit
        _embedded:
          parameter:
              '@id': https://w3id.org/italia/data/observation-parameter/positive-cases-with-date
              name: casi sintomatici con data inizio sintomi


    MeasurementUnit:
      x-onto: https://w3id.org/italia/data/measurement-unit
      type: string
      enum:
      - percentage
      - gauge
      description: |-
        See https://w3id.org/italia/data/measurement-unit for a vocabulary

    UnitaAmministrativa:
      type: object
      description: |-
        Una unità amministrativa con la sua descrizione.
      example:
        codice_stato: ITA
        nome_stato: Italia
        codice_regione: '17'
        denominazione_regione: Basilicata
        codice_provincia: '076'
        denominazione_provincia: Potenza
        sigla_provincia: PZ
        denominazione_comune: Potenza
        codice_comune: '076063'
      required:
        - codice_stato
        - codice_regione
      additionalProperties: true
      properties:
        codice_stato:
          type: string
          example: ITA
          description: >-
            vedi
            https://github.com/italia/daf-ontologie-vocabolari-controllati/blob/master/VocabolariControllati/territorial-classifications/countries/italy/italy.ttl
        nome_stato:
          type: string
          example: Italia
        codice_regione:
          type: string
          example: '17'
        denominazione_regione:
          type: string
          example: Basilicata
        codice_provincia:
          type: string
          example: '076'
        denominazione_provincia:
          type: string
          example: Potenza
        sigla_provincia:
          type: string
          example: PZ
        denominazione_comune:
          type: string
          example: Potenza
        codice_comune:
          type: string
          description: |-
            Codice Istat alfanumerico del comune.
          example: '076063'
